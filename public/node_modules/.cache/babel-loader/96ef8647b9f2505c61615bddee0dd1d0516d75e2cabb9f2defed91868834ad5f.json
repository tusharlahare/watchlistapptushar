{"ast":null,"code":"// export default (state, action) => {\n//     switch(action.type){\n//         case \"ADD_MOVIE_TO_WATCHLIST\":\n//             return {\n//                 ...state,\n//                 watchlist:[action.payload, ...state.watchlist]\n//             };\n//             case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n//                 return{\n//                     ...state,\n//                     watchlist: state.watchlist.filter(movie => movie.id !== action.payload)\n//                 }\n//         default:\n//             return state;\n//     }\n// };\n\n// Add this case in your AppReducer to handle removal\nconst AppReducer = (state, action) => {\n  switch (action.type) {\n    case 'REMOVE_MOVIE_FROM_WATCHLIST':\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(movie => movie.imdbID !== action.payload)\n      };\n    // other cases\n    default:\n      return state;\n  }\n};\n_c = AppReducer;\nvar _c;\n$RefreshReg$(_c, \"AppReducer\");","map":{"version":3,"names":["AppReducer","state","action","type","watchlist","filter","movie","imdbID","payload","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/watchListApp/watchlist/src/context/AppReducer.js"],"sourcesContent":["// export default (state, action) => {\r\n//     switch(action.type){\r\n//         case \"ADD_MOVIE_TO_WATCHLIST\":\r\n//             return {\r\n//                 ...state,\r\n//                 watchlist:[action.payload, ...state.watchlist]\r\n//             };\r\n//             case \"REMOVE_MOVIE_FROM_WATCHLIST\":\r\n//                 return{\r\n//                     ...state,\r\n//                     watchlist: state.watchlist.filter(movie => movie.id !== action.payload)\r\n//                 }\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// Add this case in your AppReducer to handle removal\r\nconst AppReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'REMOVE_MOVIE_FROM_WATCHLIST':\r\n        return {\r\n          ...state,\r\n          watchlist: state.watchlist.filter(movie => movie.imdbID !== action.payload),\r\n        };\r\n      // other cases\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAMA,UAAU,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAClC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,6BAA6B;MAChC,OAAO;QACL,GAAGF,KAAK;QACRG,SAAS,EAAEH,KAAK,CAACG,SAAS,CAACC,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACC,MAAM,KAAKL,MAAM,CAACM,OAAO;MAC5E,CAAC;IACH;IACA;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AAACQ,EAAA,GAXET,UAAU;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}