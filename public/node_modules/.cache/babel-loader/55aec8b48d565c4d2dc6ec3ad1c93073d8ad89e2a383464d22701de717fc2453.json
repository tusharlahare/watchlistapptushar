{"ast":null,"code":"// export default (state, action) => {\n//     switch(action.type){\n//         case \"ADD_MOVIE_TO_WATCHLIST\":\n//             return {\n//                 ...state,\n//                 watchlist:[action.payload, ...state.watchlist]\n//             };\n//             case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n//                 return{\n//                     ...state,\n//                     watchlist: state.watchlist.filter(movie => movie.id !== action.payload)\n//                 }\n//         default:\n//             return state;\n//     }\n// };\n\n// Add this case in your AppReducer to handle removal\n// const AppReducer = (state, action) => {\n//     switch (action.type) {\n//       case 'REMOVE_MOVIE_FROM_WATCHLIST':\n//         return {\n//           ...state,\n//           watchlist: state.watchlist.filter(movie => movie.imdbID !== action.payload),\n//         };\n//       // other cases\n//       default:\n//         return state;\n//     }\n//   };\n\n// export default (state, action) => {\n//   switch (action.type) {\n//     case \"ADD_MOVIE_TO_WATCHLIST\":\n//       return {\n//         ...state,\n//         watchlist: [action.payload, ...state.watchlist],\n//       };\n\n//     case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n//       return {\n//         ...state,\n//         watchlist: state.watchlist.filter(\n//           (movie) => movie.imdbID !== action.payload\n//         ),\n//       };\n\n//     case \"ADD_MOVIE_TO_WATCHED\":\n//       return {\n//         ...state,\n//         watchlist: state.watchlist.filter(\n//           (movie) => movie.imdbID !== action.payload.imdbID\n//         ),\n//         watched: [action.payload, ...state.watched],\n//       };\n\n//       case \"MOVE_TO_WATCHLIST\":\n//         return{\n//             ...state,\n//             watched: state.watched.filter(movie => movie.imdbID  !== action.payload.imdbID),\n//             watchlist: [action.payload, ...state.watchlist]\n\n//         }\n\n//         case \"REMOVE_FROM_WATCHED\":\n//             return {\n//                 ...state,\n//                 watched:state.watched.filter(movie => movie.imdbID  !== action.payload),\n\n//             }\n\n//     default:\n//       return state;\n//   }\n// };","map":{"version":3,"names":[],"sources":["C:/Users/Dell/OneDrive/Desktop/watchListApp/watchlist/src/context/AppReducer.js"],"sourcesContent":["// export default (state, action) => {\r\n//     switch(action.type){\r\n//         case \"ADD_MOVIE_TO_WATCHLIST\":\r\n//             return {\r\n//                 ...state,\r\n//                 watchlist:[action.payload, ...state.watchlist]\r\n//             };\r\n//             case \"REMOVE_MOVIE_FROM_WATCHLIST\":\r\n//                 return{\r\n//                     ...state,\r\n//                     watchlist: state.watchlist.filter(movie => movie.id !== action.payload)\r\n//                 }\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\n// Add this case in your AppReducer to handle removal\r\n// const AppReducer = (state, action) => {\r\n//     switch (action.type) {\r\n//       case 'REMOVE_MOVIE_FROM_WATCHLIST':\r\n//         return {\r\n//           ...state,\r\n//           watchlist: state.watchlist.filter(movie => movie.imdbID !== action.payload),\r\n//         };\r\n//       // other cases\r\n//       default:\r\n//         return state;\r\n//     }\r\n//   };\r\n\r\n// export default (state, action) => {\r\n//   switch (action.type) {\r\n//     case \"ADD_MOVIE_TO_WATCHLIST\":\r\n//       return {\r\n//         ...state,\r\n//         watchlist: [action.payload, ...state.watchlist],\r\n//       };\r\n\r\n//     case \"REMOVE_MOVIE_FROM_WATCHLIST\":\r\n//       return {\r\n//         ...state,\r\n//         watchlist: state.watchlist.filter(\r\n//           (movie) => movie.imdbID !== action.payload\r\n//         ),\r\n//       };\r\n\r\n//     case \"ADD_MOVIE_TO_WATCHED\":\r\n//       return {\r\n//         ...state,\r\n//         watchlist: state.watchlist.filter(\r\n//           (movie) => movie.imdbID !== action.payload.imdbID\r\n//         ),\r\n//         watched: [action.payload, ...state.watched],\r\n//       };\r\n\r\n//       case \"MOVE_TO_WATCHLIST\":\r\n//         return{\r\n//             ...state,\r\n//             watched: state.watched.filter(movie => movie.imdbID  !== action.payload.imdbID),\r\n//             watchlist: [action.payload, ...state.watchlist]\r\n\r\n//         }\r\n\r\n//         case \"REMOVE_FROM_WATCHED\":\r\n//             return {\r\n//                 ...state,\r\n//                 watched:state.watched.filter(movie => movie.imdbID  !== action.payload),\r\n\r\n//             }\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}