{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\watchListApp\\\\watchlist\\\\src\\\\context\\\\GlobalState.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport AppReducer from \"./AppReducer\";\n// initial  state \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  watchlist: [],\n  watched: []\n};\n\n// create context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\n\n// provider components\nexport const GlobalProvider = props => {\n  _s();\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  // localstorage\n  useEffect(() => {\n    localStorage.setItem('watchlist', JSON.stringify(state.watchlist));\n  }, []);\n\n  // action\n  const addMovieToWatchlist = movie => {\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCHLIST\",\n      payload: movie\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      watchlist: state.watchlist,\n      watched: state.watched,\n      addMovieToWatchlist\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = GlobalProvider;\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","AppReducer","jsxDEV","_jsxDEV","initialState","watchlist","watched","GlobalContext","GlobalProvider","props","_s","state","dispatch","localStorage","setItem","JSON","stringify","addMovieToWatchlist","movie","type","payload","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/watchListApp/watchlist/src/context/GlobalState.js"],"sourcesContent":["import React, {createContext, useReducer,useEffect} from 'react';\r\nimport AppReducer from \"./AppReducer\";\r\n// initial  state \r\nconst initialState = {\r\n    watchlist : [],\r\n    watched: [],\r\n};\r\n\r\n// create context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// provider components\r\nexport const GlobalProvider = props => {\r\n    const [state, dispatch] = useReducer (AppReducer, initialState);\r\n    // localstorage\r\n    useEffect(() => {\r\n       localStorage.setItem('watchlist', JSON.stringify(state.watchlist));\r\n\r\n    },[])\r\n   \r\n   // action\r\n   const addMovieToWatchlist = movie => {\r\n    dispatch({type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie});\r\n   };\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{watchlist: state.watchlist, watched: state.watched, addMovieToWatchlist,}}>\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n    \r\n    \r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,UAAU,EAACC,SAAS,QAAO,OAAO;AAChE,OAAOC,UAAU,MAAM,cAAc;AACrC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACjBC,SAAS,EAAG,EAAE;EACdC,OAAO,EAAE;AACb,CAAC;;AAED;;AAEA,OAAO,MAAMC,aAAa,gBAAGT,aAAa,CAACM,YAAY,CAAC;;AAExD;AACA,OAAO,MAAMI,cAAc,GAAGC,KAAK,IAAI;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,UAAU,CAAEE,UAAU,EAAEG,YAAY,CAAC;EAC/D;EACAJ,SAAS,CAAC,MAAM;IACba,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK,CAACN,SAAS,CAAC,CAAC;EAErE,CAAC,EAAC,EAAE,CAAC;;EAEN;EACA,MAAMY,mBAAmB,GAAGC,KAAK,IAAI;IACpCN,QAAQ,CAAC;MAACO,IAAI,EAAE,wBAAwB;MAAEC,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC3D,CAAC;EAEA,oBACIf,OAAA,CAACI,aAAa,CAACc,QAAQ;IAACC,KAAK,EAAE;MAACjB,SAAS,EAAEM,KAAK,CAACN,SAAS;MAAEC,OAAO,EAAEK,KAAK,CAACL,OAAO;MAAEW;IAAoB,CAAE;IAAAM,QAAA,EACrGd,KAAK,CAACc;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAIjC,CAAC;AAACjB,EAAA,CApBWF,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}