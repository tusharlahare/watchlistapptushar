{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\watchListApp\\\\watchlist\\\\src\\\\context\\\\GlobalState.js\",\n  _s = $RefreshSig$();\n// import React, { createContext, useReducer, useEffect } from \"react\";\n// import AppReducer from \"./AppReducer\";\n// // initial  state\n// const initialState = {\n//   watchlist: localStorage.getItem(\"watchlist\")\n//     ? JSON.parse(localStorage.getItem(\"watchlist\"))\n//     : [],\n//     watched: localStorage.getItem(\"watched\")\n//     ? JSON.parse(localStorage.getItem(\"watched\"))\n//     : [],\n// };\n\n// // create context\n\n// export const GlobalContext = createContext(initialState);\n\n// // provider components\n// export const GlobalProvider = (props) => {\n//   const [state, dispatch] = useReducer(AppReducer, initialState);\n//   // localstorage\n//   useEffect(() => {\n//     localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\n//     localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n//   }, [state]);\n\n//   // action\n//   const addMovieToWatchlist = (movie) => {\n//     dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\n//   };\n\n//   return (\n//     <GlobalContext.Provider\n//       value={{\n//         watchlist: state.watchlist,\n//         watched: state.watched,\n//         addMovieToWatchlist,\n\n//       }}\n//     >\n//       {props.children}\n//     </GlobalContext.Provider>\n//   );\n// };\n\nimport React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\"; // Ensure this is the correct path\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  watchlist: JSON.parse(localStorage.getItem(\"watchlist\")) || [],\n  watched: JSON.parse(localStorage.getItem(\"watched\")) || []\n};\n\n// Create context\nexport const GlobalContext = /*#__PURE__*/createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = props => {\n  _s();\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Ensure AppReducer is valid here\n\n  useEffect(() => {\n    localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n  }, [state]);\n\n  // Actions\n  const addMovieToWatchlist = movie => {\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCHLIST\",\n      payload: movie\n    });\n  };\n  const removeMoviefromWatchlist = id => {\n    dispatch({\n      type: \"REMOVE_MOVIE_FROM_WATCHLIST\",\n      payload: id\n    });\n  };\n  const addMovieToWatched = movie => {\n    dispatch({\n      type\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      watchlist: state.watchlist,\n      watched: state.watched,\n      addMovieToWatchlist,\n      removeMoviefromWatchlist\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = GlobalProvider;\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useEffect","AppReducer","jsxDEV","_jsxDEV","initialState","watchlist","JSON","parse","localStorage","getItem","watched","GlobalContext","GlobalProvider","props","_s","state","dispatch","setItem","stringify","addMovieToWatchlist","movie","type","payload","removeMoviefromWatchlist","id","addMovieToWatched","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/watchListApp/watchlist/src/context/GlobalState.js"],"sourcesContent":["// import React, { createContext, useReducer, useEffect } from \"react\";\r\n// import AppReducer from \"./AppReducer\";\r\n// // initial  state\r\n// const initialState = {\r\n//   watchlist: localStorage.getItem(\"watchlist\")\r\n//     ? JSON.parse(localStorage.getItem(\"watchlist\"))\r\n//     : [],\r\n//     watched: localStorage.getItem(\"watched\")\r\n//     ? JSON.parse(localStorage.getItem(\"watched\"))\r\n//     : [],\r\n// };\r\n\r\n// // create context\r\n\r\n// export const GlobalContext = createContext(initialState);\r\n\r\n// // provider components\r\n// export const GlobalProvider = (props) => {\r\n//   const [state, dispatch] = useReducer(AppReducer, initialState);\r\n//   // localstorage\r\n//   useEffect(() => {\r\n//     localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\r\n//     localStorage.setItem(\"watched\", JSON.stringify(state.watched));\r\n//   }, [state]);\r\n\r\n//   // action\r\n//   const addMovieToWatchlist = (movie) => {\r\n//     dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\r\n//   };\r\n\r\n//   return (\r\n//     <GlobalContext.Provider\r\n//       value={{\r\n//         watchlist: state.watchlist,\r\n//         watched: state.watched,\r\n//         addMovieToWatchlist,\r\n\r\n//       }}\r\n//     >\r\n//       {props.children}\r\n//     </GlobalContext.Provider>\r\n//   );\r\n// };\r\n\r\n\r\nimport React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\"; // Ensure this is the correct path\r\n\r\n// Initial state\r\nconst initialState = {\r\n  watchlist: JSON.parse(localStorage.getItem(\"watchlist\")) || [],\r\n  watched: JSON.parse(localStorage.getItem(\"watched\")) || [],\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nexport const GlobalProvider = (props) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Ensure AppReducer is valid here\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\r\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\r\n  }, [state]);\r\n\r\n  // Actions\r\n  const addMovieToWatchlist = (movie) => {\r\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\r\n  };\r\n\r\n  const removeMoviefromWatchlist = (id) => {\r\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\r\n  };\r\n\r\n  const addMovieToWatched = movie => {\r\n    dispatch({type})\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        watchlist: state.watchlist,\r\n        watched: state.watched,\r\n        addMovieToWatchlist,\r\n        removeMoviefromWatchlist,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACnE,OAAOC,UAAU,MAAM,cAAc,CAAC,CAAC;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAG;EACnBC,SAAS,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;EAC9DC,OAAO,EAAEJ,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI;AAC1D,CAAC;;AAED;AACA,OAAO,MAAME,aAAa,gBAAGb,aAAa,CAACM,YAAY,CAAC;;AAExD;AACA,OAAO,MAAMQ,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,UAAU,CAACE,UAAU,EAAEG,YAAY,CAAC,CAAC,CAAC;;EAEhEJ,SAAS,CAAC,MAAM;IACdQ,YAAY,CAACS,OAAO,CAAC,WAAW,EAAEX,IAAI,CAACY,SAAS,CAACH,KAAK,CAACV,SAAS,CAAC,CAAC;IAClEG,YAAY,CAACS,OAAO,CAAC,SAAS,EAAEX,IAAI,CAACY,SAAS,CAACH,KAAK,CAACL,OAAO,CAAC,CAAC;EAChE,CAAC,EAAE,CAACK,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMI,mBAAmB,GAAIC,KAAK,IAAK;IACrCJ,QAAQ,CAAC;MAAEK,IAAI,EAAE,wBAAwB;MAAEC,OAAO,EAAEF;IAAM,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMG,wBAAwB,GAAIC,EAAE,IAAK;IACvCR,QAAQ,CAAC;MAAEK,IAAI,EAAE,6BAA6B;MAAEC,OAAO,EAAEE;IAAG,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,iBAAiB,GAAGL,KAAK,IAAI;IACjCJ,QAAQ,CAAC;MAACK;IAAI,CAAC,CAAC;EAClB,CAAC;EAED,oBACElB,OAAA,CAACQ,aAAa,CAACe,QAAQ;IACrBC,KAAK,EAAE;MACLtB,SAAS,EAAEU,KAAK,CAACV,SAAS;MAC1BK,OAAO,EAAEK,KAAK,CAACL,OAAO;MACtBS,mBAAmB;MACnBI;IACF,CAAE;IAAAK,QAAA,EAEDf,KAAK,CAACe;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAE7B,CAAC;AAAClB,EAAA,CAjCWF,cAAc;AAAAqB,EAAA,GAAdrB,cAAc;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}