{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\watchListApp\\\\watchlist\\\\src\\\\components\\\\Add.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// export const Add = () => {\n//   const [query, setQuery] = useState(\"\");\n//   const [results, setResults] = useState([]);\n\n//   const onChange = (e) => {\n//     e.preventDefault();\n//     setQuery(e.target.value);\n\n//     // Use the 's' parameter for searching by movie title\n//     fetch(\n//       `http://www.omdbapi.com/?s=${e.target.value}&apikey=${process.env.REACT_APP_MY_KEY}&language=en-US&page=1&include_adult=false`\n//         )\n//       .then((res) => res.json())\n//       .then((data) => {\n//         if(!data.errors){\n//           setResults(data.results);\n//         }else {\n//           setResults([]);\n//         }\n//       });\n//       // .catch((error) => {\n//       //   console.error(\"Error fetching data:\", error);\n//       // });\n//   };\n\n//   return (\n//     <div className=\"add-page\">\n//       <div className=\"container\">\n//         <div className=\"add-content\">\n//           <div className=\"input-wrapper\">\n//             <input\n//               type=\"text\"\n//               placeholder=\"Search for a movie... \"\n//               value={query}\n//               onChange={onChange}\n//             />\n//           </div>\n//           {results.length > 0 && (\n//             <ul className=\"results\">\n//              {results.map((movie) =>(\n//               <li>\n//                 {movie.title}</li>\n//              ))}\n//             </ul>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// let response = fetch(\"http://www.omdbapi.com/?apikey=b0e1615e\")\n\n// let result = response.then((res)=>{\n//     return res.json()\n// })\n\n// console.log(result)\n\nimport React, { useState } from \"react\";\nimport { ResultCard } from \"./ResultCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Add = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]); // results will hold the array of movies\n\n  const onChange = e => {\n    e.preventDefault();\n    setQuery(e.target.value);\n\n    // Use the 's' parameter for searching by movie title\n    fetch(`http://www.omdbapi.com/?s=${e.target.value}&apikey=${process.env.REACT_APP_MY_KEY}&language=en-US&page=1&include_adult=false`).then(res => res.json()).then(data => {\n      if (data && data.Search) {\n        setResults(data.Search); // Update with data.Search, not data.results\n      } else {\n        setResults([]); // Clear results if no movies found\n      }\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setResults([]); // Clear results in case of an error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search for a movie... \",\n            value: query,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"results\",\n          children: results.map(movie => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [movie.Title, \" (\", movie.Year, \")\"]\n          }, movie.imdbID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 48\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Add, \"Grp0ouI1isRc8g0LMx1FfgxNSWM=\");\n_c = Add;\nvar _c;\n$RefreshReg$(_c, \"Add\");","map":{"version":3,"names":["React","useState","ResultCard","jsxDEV","_jsxDEV","Add","_s","query","setQuery","results","setResults","onChange","e","preventDefault","target","value","fetch","process","env","REACT_APP_MY_KEY","then","res","json","data","Search","catch","error","console","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","map","movie","Title","Year","imdbID","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/watchListApp/watchlist/src/components/Add.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// export const Add = () => {\r\n//   const [query, setQuery] = useState(\"\");\r\n//   const [results, setResults] = useState([]);\r\n\r\n//   const onChange = (e) => {\r\n//     e.preventDefault();\r\n//     setQuery(e.target.value);\r\n\r\n//     // Use the 's' parameter for searching by movie title\r\n//     fetch(\r\n//       `http://www.omdbapi.com/?s=${e.target.value}&apikey=${process.env.REACT_APP_MY_KEY}&language=en-US&page=1&include_adult=false`\r\n//         )\r\n//       .then((res) => res.json())\r\n//       .then((data) => {\r\n//         if(!data.errors){\r\n//           setResults(data.results);\r\n//         }else {\r\n//           setResults([]);\r\n//         }\r\n//       });\r\n//       // .catch((error) => {\r\n//       //   console.error(\"Error fetching data:\", error);\r\n//       // });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"add-page\">\r\n//       <div className=\"container\">\r\n//         <div className=\"add-content\">\r\n//           <div className=\"input-wrapper\">\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Search for a movie... \"\r\n//               value={query}\r\n//               onChange={onChange}\r\n//             />\r\n//           </div>\r\n//           {results.length > 0 && (\r\n//             <ul className=\"results\">\r\n//              {results.map((movie) =>(\r\n//               <li>\r\n//                 {movie.title}</li>\r\n//              ))}\r\n//             </ul>\r\n//           )}\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// let response = fetch(\"http://www.omdbapi.com/?apikey=b0e1615e\")\r\n\r\n// let result = response.then((res)=>{\r\n//     return res.json()\r\n// })\r\n\r\n// console.log(result)\r\n\r\nimport React, { useState } from \"react\";\r\nimport { ResultCard } from \"./ResultCard\";\r\n\r\nexport const Add = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState([]); // results will hold the array of movies\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setQuery(e.target.value);\r\n\r\n    // Use the 's' parameter for searching by movie title\r\n    fetch(\r\n      `http://www.omdbapi.com/?s=${e.target.value}&apikey=${process.env.REACT_APP_MY_KEY}&language=en-US&page=1&include_adult=false`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data && data.Search) {\r\n          setResults(data.Search); // Update with data.Search, not data.results\r\n        } else {\r\n          setResults([]); // Clear results if no movies found\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n        setResults([]); // Clear results in case of an error\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-page\">\r\n      <div className=\"container\">\r\n        <div className=\"add-content\">\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search for a movie... \"\r\n              value={query}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          {results.length > 0 && (\r\n            <ul className=\"results\">\r\n              {results.map((movie) => (\r\n                                               <li key={movie.imdbID}>\r\n                  {movie.Title} ({movie.Year})\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}